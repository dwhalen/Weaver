(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     89299,       2732]
NotebookOptionsPosition[     79192,       2389]
NotebookOutlinePosition[     79550,       2405]
CellTagsIndexPosition[     79507,       2402]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["An overview of the Weaver package", "Title",
 CellChangeTimes->{{3.621882909373489*^9, 3.621882918894651*^9}, {
   3.6218838228020773`*^9, 3.621883828015006*^9}, 3.6230941770076933`*^9, {
   3.626474751144429*^9, 3.626474751780817*^9}}],

Cell[TextData[{
 "The following provides documentation of the commands in the Weaver \
(W-algebra exact arithmetic Verma module evaluator) package for performing \
calculations in modules of W-algebras.\n\nA W-algebra is an algebra that is \
generated by the modes of a finite number of simple fields and superfields \
whose (anti-)commutation relations close under the inclusion of \
normal-ordered products of fields and derivatives of fields and satisfy a \
Jacobi Identity.\n\nThis package works with Verma modules of highest weight \
vectors of fields.  It starts by defining highest weight vectors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]]],
 ", which are annihilated by the positive modes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "n"], 
    SubscriptBox["v", "i"]}], TraditionalForm]]],
 "= 0 when n > 0, and which transform under a representation of the 0-modes.\n\
\nThe Verma module is the representation generated by the action of the \
universal enveloping algebra of the W-algebra on the highest weight vector \
(i.e. by the action of creation operators).\n\nExamples of use of the package \
are provided in attached Mathematica notebook, Weaver_examples.nb.  That \
notebook describes the construction of two algebras, the Virasoro algebra and \
the SW(3/2,2) algebra as well as a number of examples of use of the package \
to isolate the structure of minimal models for these two algebras.\n\nThis \
notebook will provide a comprehensive overview of the commands and \
capabilities of the Weaver package."
}], "Text",
 CellChangeTimes->{{3.6218829707362022`*^9, 3.621883041009622*^9}, {
   3.621883114874065*^9, 3.621883199574946*^9}, {3.621883349811174*^9, 
   3.621883471692069*^9}, {3.62309419390304*^9, 3.6230942261364927`*^9}, {
   3.626474758806312*^9, 3.62647493633659*^9}, 3.6778758690776367`*^9}],

Cell[CellGroupData[{

Cell["Loading the package", "Section",
 CellChangeTimes->{{3.621883504258903*^9, 3.621883511401225*^9}}],

Cell[TextData[{
 "To begin, verify that the file ",
 "Weaver",
 ".m is in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s path.  If it is not, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s path may be modified by appending a directory to the \
$Path variable.\n\nOnce you have done so, you may load the package using the \
following command.  Loading the package clears any previously completed \
calculations performed by the package, so must be done each time the algebra \
is changed."
}], "Text",
 CellChangeTimes->{{3.621883527873665*^9, 3.6218835442501173`*^9}, {
   3.621883622359704*^9, 3.62188368404663*^9}, {3.62188469877873*^9, 
   3.6218847422837963`*^9}, 3.626474770762682*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "Weaver.m"}]], "Input",
 CellChangeTimes->{{3.621883685586053*^9, 3.621883689944004*^9}, 
   3.6264747707892447`*^9}],

Cell[BoxData["\"\<Weaver: a package for explicit exact-arithmetic \
calculations in operator algebras\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.624735707585985*^9, 3.624735741758498*^9, 
  3.626474770833304*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing Algebras and Representations", "Section",
 CellChangeTimes->{{3.621883704562552*^9, 3.621883709759116*^9}, {
  3.6218858311924467`*^9, 3.621885835317068*^9}}],

Cell[TextData[{
 "Algebras may be defined by providing a particular set of parameters.  ",
 StyleBox["OperatorList",
  FontWeight->"Bold"],
 " and ",
 StyleBox["HighestWeightDimension",
  FontWeight->"Bold"],
 " must be defined for the entire algebra.  ",
 StyleBox["\[CapitalDelta]",
  FontWeight->"Bold"],
 ", ",
 StyleBox["FermionQ",
  FontWeight->"Bold"],
 ", ",
 StyleBox["HC",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["Grading",
  FontWeight->"Bold"],
 " must be defined for each operator.  ",
 StyleBox["operator[0]",
  FontWeight->"Bold"],
 " must be defined for each operator with integer grading.  ",
 StyleBox["Commutator",
  FontWeight->"Bold"],
 " must be defined for each ordered pair of operators.\n\nThe additional \
variables ",
 StyleBox["MinimalGeneratorsCreation",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["MinimalGeneratorsAnnihilation",
  FontWeight->"Bold"],
 " must be defined for the entire algebra in order to perform certain \
calculations.\n\nThe examples for the following operators will describe the \
creation of the N=1 super Virasoro algebra at c=12 in the NS sector acting on \
the vacuum Verma module."
}], "Text",
 CellChangeTimes->{{3.621883804713286*^9, 3.621883850263466*^9}, {
   3.62188388276873*^9, 3.621883971410708*^9}, 3.621884031181489*^9, {
   3.621884170348897*^9, 3.62188420386761*^9}, {3.621884564312628*^9, 
   3.621884624249812*^9}, {3.621884928162365*^9, 3.62188493329825*^9}, {
   3.621884989718541*^9, 3.621885020198884*^9}, {3.621885507776845*^9, 
   3.62188554103806*^9}, {3.621886829766961*^9, 3.62188688071036*^9}, {
   3.621886980314451*^9, 3.621886981696093*^9}, {3.621887349516552*^9, 
   3.621887391358478*^9}, {3.6230942575315933`*^9, 3.623094258376154*^9}}],

Cell[CellGroupData[{

Cell["OperatorList", "Subsubsection",
 CellChangeTimes->{{3.621884218918174*^9, 3.621884221355131*^9}}],

Cell["\<\
OperatorList is a list of the names of the simple operators in the theory.  \
Each of these names without parameters should be unbound.\
\>", "Text",
 CellChangeTimes->{{3.6218842242594748`*^9, 3.62188422604322*^9}, {
  3.6218845570517893`*^9, 3.6218845607525167`*^9}, {3.621884638169525*^9, 
  3.621884681266324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"OperatorList", "=", " ", 
   RowBox[{"{", 
    RowBox[{"L", ",", "G"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.621884685439266*^9, 3.621884690547586*^9}, {
  3.621884754149572*^9, 3.621884756334063*^9}, {3.621884999574059*^9, 
  3.6218850001397057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HighestWeightDimension", "Subsubsection",
 CellChangeTimes->{{3.621885547736413*^9, 3.6218855496605177`*^9}}],

Cell[TextData[{
 StyleBox["HighestWeightDimension",
  FontWeight->"Bold"],
 " should be set to the dimension of the highest-weight space.  The 0-modes \
of the algebra should form a ",
 StyleBox["HighestWeightDimension",
  FontWeight->"Bold"],
 " dimension of this space."
}], "Text",
 CellChangeTimes->{{3.6218855523588047`*^9, 3.621885604912105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HighestWeightDimension", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.621885612660054*^9, 3.6218856152735023`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]", "Subsubsection",
 CellChangeTimes->{{3.621884762504147*^9, 3.6218847676611013`*^9}}],

Cell[TextData[{
 StyleBox["\[CapitalDelta][operator]",
  FontWeight->"Bold"],
 " should be set to the conformal weight of the operator for each operator in \
",
 StyleBox["OperatorList",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.621884769777326*^9, 3.621884824143938*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]", "[", "L", "]"}], "=", "2"}], ";", 
  RowBox[{
   RowBox[{"\[CapitalDelta]", "[", "G", "]"}], "=", 
   RowBox[{"3", "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.621884831042307*^9, 3.621884835281411*^9}, {
  3.621885053432445*^9, 3.621885059280056*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FermionQ", "Subsubsection",
 CellChangeTimes->{{3.621884851563155*^9, 3.621884866649192*^9}}],

Cell[TextData[{
 "For each operator in ",
 StyleBox["OperatorList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["FermionQ",
  FontWeight->"Bold"],
 " needs to be set to ",
 StyleBox["True",
  FontWeight->"Bold"],
 " if the operator is a fermion and ",
 StyleBox["False",
  FontWeight->"Bold"],
 " otherwise."
}], "Text",
 CellChangeTimes->{{3.621884869504833*^9, 3.621884911323434*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FermionQ", "[", "L", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FermionQ", "[", "G", "]"}], "=", "True"}], ";"}]}], "Input",
 CellChangeTimes->{{3.621884915687264*^9, 3.6218849206269293`*^9}, {
  3.62188509766173*^9, 3.621885105995411*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HC", "Subsubsection",
 CellChangeTimes->{{3.6218851234192533`*^9, 3.621885123561048*^9}}],

Cell[TextData[{
 StyleBox["HC[X, n, level]",
  FontWeight->"Bold"],
 " gives the matrix form of the Hermitian conjugate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " acting on level (level+n) on the left or level on the right.  In general, ",
 StyleBox["HC[X, n, level]",
  FontWeight->"Bold"],
 " should be set to ",
 StyleBox["Operator[X, -n, level-n]",
  FontWeight->"Bold"],
 ", although this may be changed if X has a nonstandard Hermetian conjugate."
}], "Text",
 CellChangeTimes->{{3.621885130313114*^9, 3.6218852511152077`*^9}, {
  3.621885320494157*^9, 3.621885360300963*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HC", "[", 
    RowBox[{"L", ",", "n", ",", "level"}], "]"}], ":=", 
   RowBox[{"Operator", "[", 
    RowBox[{"L", ",", 
     RowBox[{"-", "n"}], ",", 
     RowBox[{"level", "-", "n"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HC", "[", 
    RowBox[{"G", ",", "n", ",", "level"}], "]"}], ":=", 
   RowBox[{"Operator", "[", 
    RowBox[{"G", ",", 
     RowBox[{"-", "n"}], ",", 
     RowBox[{"level", "-", "n"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.621885362194539*^9, 3.6218853819689827`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grading", "Subsubsection",
 CellChangeTimes->{{3.621885392436034*^9, 3.6218853930819197`*^9}}],

Cell[TextData[{
 "For each operator, ",
 StyleBox["Grading",
  FontWeight->"Bold"],
 " should be set to 0 if the modes of the operator are integer graded and 1/2 \
if the modes of the operator are half-integer graded."
}], "Text",
 CellChangeTimes->{{3.621885426031597*^9, 3.6218854728775797`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Grading", "[", "L", "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Grading", "[", "G", "]"}], "=", 
   RowBox[{"1", "/", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.621885476182602*^9, 3.621885492102579*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["operator[0]", "Subsubsection",
 CellChangeTimes->{{3.621885704926199*^9, 3.621885706376582*^9}}],

Cell[TextData[{
 StyleBox["operator[0",
  FontWeight->"Bold"],
 "] should be defined for each operator with integer grading.  It should take \
matrix values that form a representation of the 0-mode algebra on the \
highest-weight space, or a scalar value if that dimension is 1."
}], "Text",
 CellChangeTimes->{{3.621885713451352*^9, 3.62188579412798*^9}, {
  3.621885842789385*^9, 3.621885849909787*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "0", "]"}], "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.621885802460881*^9, 3.621885811157681*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["AddOperator", "Subsubsection",
 CellChangeTimes->{{3.6218864654652357`*^9, 3.62188646939028*^9}}],

Cell[TextData[{
 "AddOperator[operator, fermionq, grading, conformal_weight] initializes a \
new \noperator named operator by adding it to ",
 StyleBox["OperatorList",
  FontWeight->"Bold"],
 ", setting ",
 StyleBox["FermionQ[operator]=fermionq, Grading[operator]=grading",
  FontWeight->"Bold"],
 ", ",
 StyleBox["\[CapitalDelta][operator]=conformal_weight",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["HC[operator,n,level]:=Operator[operator,-n,level-n].",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6218864721842737`*^9, 3.621886625833757*^9}},
 FontWeight->"Plain"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "OperatorList", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddOperator", "[", 
   RowBox[{"L", ",", "False", ",", "0", ",", "2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddOperator", "[", 
   RowBox[{"G", ",", "True", ",", 
    RowBox[{"1", "/", "2"}], ",", 
    RowBox[{"3", "/", "2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.621886631066985*^9, 3.621886670979128*^9}, 
   3.623094313023409*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commutator", "Subsubsection",
 CellChangeTimes->{{3.621885863162669*^9, 3.6218858706429453`*^9}}],

Cell[TextData[{
 StyleBox["Commutator[X, m, Y, n, level]",
  FontWeight->"Bold"],
 " gives an expression for the (anti-)commutator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["X", "m"], ",", 
     SubscriptBox["Y", "n"]}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " acting on level.  ",
 StyleBox["Commutator ",
  FontWeight->"Bold"],
 "should be defined in terms of ",
 StyleBox["\[Delta][n+m,level]",
  FontWeight->"Bold"],
 ",",
 StyleBox[" Operator[Z, m+n, level]",
  FontWeight->"Bold"],
 ", ",
 StyleBox["NOperator[Z, W, m+n, level]",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["NOperator[Z, a, W, b, m+n, level]",
  FontWeight->"Bold"],
 " which are expressions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Subscript", "[", 
     RowBox[{"\[Delta]", ",", " ", 
      RowBox[{"n", " ", "+", " ", "m"}]}], "]"}], ",", " ", 
    RowBox[{"Subscript", "[", 
     RowBox[{"Z", ",", " ", "n"}], "]"}], ",", " ", 
    RowBox[{":", "ZW", 
     SubscriptBox[":", 
      RowBox[{"n", "+", "m"}]]}], ",", " ", 
    RowBox[{"and", " ", ":", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[PartialD]", "a"], "Z"}], 
      RowBox[{
       SuperscriptBox["\[PartialD]", "b"], "W"}]}], 
     SubscriptBox[":", 
      RowBox[{"n", "+", "m"}]]}], ",", " ", "respectively"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6218858783976107`*^9, 3.6218860804080067`*^9}, {
  3.621886118019425*^9, 3.621886192060226*^9}, {3.6218863369757013`*^9, 
  3.621886338407434*^9}}],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Commutator", "[", 
    RowBox[{"L", ",", "m_", ",", "L", ",", "n_", ",", "level_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"(", 
       RowBox[{"n", "-", "m"}], ")"}],
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Operator",
       FontWeight->"Bold"], "[", 
      RowBox[{"L", ",", 
       RowBox[{"n", "+", "m"}], ",", "level"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "^", "3"}], "-", "n"}], ")"}], 
     RowBox[{"\[Delta]", "[", 
      RowBox[{
       RowBox[{"m", "+", "n"}], ",", "level"}], "]"}]}]}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Commutator", "[", 
    RowBox[{"G", ",", "m_", ",", "G", ",", "n_", ",", "level_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Operator", "[", 
      RowBox[{"L", ",", 
       RowBox[{"n", "+", "m"}], ",", "level"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", 
        RowBox[{"m", "^", "2"}]}], "-", "1"}], ")"}], 
     RowBox[{"\[Delta]", "[", 
      RowBox[{
       RowBox[{"m", "+", "n"}], ",", "level"}], "]"}]}]}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Commutator", "[", 
   RowBox[{"L", ",", "m_", ",", "G", ",", "n_", ",", "level_"}], "]"}], ":=", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", "/", "2"}], "-", "n"}], ")"}], 
   RowBox[{"Operator", "[", 
    RowBox[{"G", ",", 
     RowBox[{"n", "+", "m"}], ",", "level"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Commutator", "[", 
   RowBox[{"G", ",", "n_", ",", "L", ",", "m_", ",", "level_"}], "]"}], ":=", 
  
  RowBox[{"-", 
   RowBox[{"Commutator", "[", 
    RowBox[{"L", ",", "m", ",", "G", ",", "n", ",", "level"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.621886209600573*^9, 3.621886461047236*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MinimalGeneratorsCreation and \
MinimalGeneratorsAnnihilation", "Subsubsection"]], "Subsubsection",
 CellChangeTimes->{{3.621886954489386*^9, 3.621886998193242*^9}}],

Cell[TextData[{
 StyleBox["MinimalGeneratorsCreation",
  FontWeight->"Bold"],
 " (resp. ",
 StyleBox["MinimalGeneratorsAnnihilation",
  FontWeight->"Bold"],
 ") should be set to a list of operators that that generate the negative \
(resp positive) level space of operators.  They do not need to be minimal, \
but including redundant operators may slow certain calculations.  Operators \
should be listed as ",
 StyleBox["{X,n}",
  FontWeight->"Bold"],
 " to represent ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.621887015220825*^9, 3.621887150364064*^9}, {
  3.623094320497611*^9, 3.623094320646003*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MinimalGeneratorsAnnihilation", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinimalGeneratorsCreation", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{
        RowBox[{"-", "3"}], "/", "2"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6218871134528713`*^9, 3.621887123389544*^9}, {
  3.621887158792384*^9, 3.621887215361834*^9}, {3.621887268387602*^9, 
  3.621887273986664*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions describing operators", "Section",
 CellChangeTimes->{{3.621883704562552*^9, 3.621883709759116*^9}, {
  3.6218858311924467`*^9, 3.621885835317068*^9}, {3.621886797215538*^9, 
  3.621886809025537*^9}, {3.621888342563197*^9, 3.621888363865052*^9}, {
  3.621888525946011*^9, 3.621888533718463*^9}}],

Cell["\<\
Included here is a list of commands provided by the package that describe the \
subspaces of the Verma modules and linear action of Operators.  Examples of \
their use are provided on the super Virasoro representation defined above.\
\>", "Text",
 CellChangeTimes->{{3.621887297862628*^9, 3.621887337395352*^9}, {
  3.621887402745091*^9, 3.621887404437729*^9}, {3.621888540030499*^9, 
  3.62188858565517*^9}, {3.623094343112321*^9, 3.623094344024496*^9}}],

Cell[CellGroupData[{

Cell["FSign", "Subsubsection",
 CellChangeTimes->{3.621887436145748*^9}],

Cell["\<\
FSign[X,Y] returns -1 if both X and Y are fermionic and 1 otherwise.\
\>", "Text",
 CellChangeTimes->{{3.621887448548818*^9, 3.621887465966954*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FSign", "[", 
  RowBox[{"L", ",", "G"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FSign", "[", 
  RowBox[{"G", ",", "G"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621887468423706*^9, 3.6218874774562902`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.621887477960504*^9, 3.6218874825153837`*^9}, 
   3.62196271002584*^9, {3.6219630801351137`*^9, 3.6219630904469624`*^9}, {
   3.621965307901922*^9, 3.6219653582504387`*^9}, 3.621965440634501*^9, 
   3.62196593112484*^9, 3.6219666871996393`*^9, 3.6247356358674173`*^9, 
   3.62473574209163*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.621887477960504*^9, 3.6218874825153837`*^9}, 
   3.62196271002584*^9, {3.6219630801351137`*^9, 3.6219630904469624`*^9}, {
   3.621965307901922*^9, 3.6219653582504387`*^9}, 3.621965440634501*^9, 
   3.62196593112484*^9, 3.6219666871996393`*^9, 3.6247356358674173`*^9, 
   3.6247357420961742`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OperatorNames", "Subsubsection",
 CellChangeTimes->{3.621887823544693*^9}],

Cell["\<\
OperatorNames[level] returns a list of all of the operators in the universal \
covering algebra of the negative subalgebra at a given level.  Each operator \
is given as a product of operators in OperatorList, listing those operators \
by {operator_name,level}.\
\>", "Text",
 CellChangeTimes->{{3.621887835103567*^9, 3.6218878614159813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OperatorNames", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.621887881143001*^9, 3.621887887252408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"-", "2"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"-", 
        FractionBox["3", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6218878877374687`*^9, 3.621962710077016*^9, {3.621963080170683*^9, 
   3.621963090494219*^9}, {3.621965307953394*^9, 3.6219653582882767`*^9}, 
   3.6219654406793547`*^9, 3.621965931180936*^9, 3.621966687232855*^9, 
   3.6247356359196987`*^9, 3.6247357421214437`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PositiveOperatorNames", "Subsubsection",
 CellChangeTimes->{3.621962572989624*^9}],

Cell["\<\
PositiveOperatorNames[level] returns a list of all of the operators in the \
universal covering algebra of the positive subalgebra at a given level.  Each \
operator is given as a product of operators in OperatorList, listing those \
operators by {operator_name,level}.\
\>", "Text",
 CellChangeTimes->{{3.621962579524158*^9, 3.621962583206955*^9}, {
  3.62309436580858*^9, 3.62309436673347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositiveOperatorNames", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.6219625894902983`*^9, 3.621962590544932*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"L", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       FractionBox["3", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", 
       FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621962710129096*^9, {3.6219630802227783`*^9, 3.621963090545042*^9}, {
   3.621965308082286*^9, 3.621965358321116*^9}, 3.6219654407281*^9, 
   3.621965931230219*^9, 3.621966687266961*^9, 3.624735635960688*^9, 
   3.624735742164818*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["StateNames", "Subsubsection",
 CellChangeTimes->{{3.621888015665926*^9, 3.621888017368875*^9}}],

Cell["\<\
StateNames returns a list of states in the Verma module at a given level.  \
The states are products of operators times one of the highest-weight vectors.\
\[CloseCurlyDoubleQuote];\
\>", "Text",
 CellChangeTimes->{{3.621888020937262*^9, 3.621888029169146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StateNames", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.621888035123561*^9, 3.621888038727721*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{"-", "2"}]}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"-", 
          FractionBox["3", "2"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"L", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"L", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621888042075489*^9, 3.62196271017675*^9, {3.6219630802760687`*^9, 
   3.6219630905945044`*^9}, {3.62196530816805*^9, 3.621965358354224*^9}, 
   3.6219654407779503`*^9, 3.621965931280376*^9, 3.621966687299749*^9, 
   3.624735636012785*^9, 3.624735742213985*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LLen", "Subsubsection",
 CellChangeTimes->{{3.621888077297176*^9, 3.621888077831195*^9}}],

Cell["\<\
LLen[level] returns the dimension of the subspace of the Verma module at \
level.  This is equal to the length of StateNames[level]\
\>", "Text",
 CellChangeTimes->{{3.621888080763362*^9, 3.6218881093996696`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LLen", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.621888091023919*^9, 3.621888097226856*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.621888097538652*^9, 3.621962710275152*^9, {3.62196308032003*^9, 
   3.621963090644953*^9}, {3.621965308219112*^9, 3.621965358386683*^9}, 
   3.6219654408291283`*^9, 3.621965931330522*^9, 3.621966687317749*^9, 
   3.624735636060967*^9, 3.6247357422655993`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["StateVector", "Subsubsection",
 CellChangeTimes->{{3.621888119041164*^9, 3.621888121127515*^9}}],

Cell["\<\
StateVector[name] returns the vector corresponding to a state with a given \
name in the format
given by StateNames.\
\>", "Text",
 CellChangeTimes->{3.621888166916582*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StateVector", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"-", "2"}]}], "}"}], "}"}], ",", "1"}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.621888171429502*^9, 3.621888186290799*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.621888187015829*^9, 3.621962710334957*^9, {3.6219630803683033`*^9, 
   3.621963090695409*^9}, {3.6219653082697678`*^9, 3.621965358513645*^9}, 
   3.621965440880581*^9, 3.6219659313957977`*^9, 3.621966687349873*^9, 
   3.624735636111356*^9, 3.624735742314013*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DisplayName", "Subsubsection",
 CellChangeTimes->{{3.621890901577325*^9, 3.621890903471637*^9}}],

Cell["\<\
DisplayName[operator] or DisplayName[state] returns a more human-readable \
expression for the operator or state.\
\>", "Text",
 CellChangeTimes->{{3.62189090604738*^9, 3.621890936023589*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DisplayName", "[", 
  RowBox[{
   RowBox[{"StateNames", "[", "2", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DisplayName", "[", 
  RowBox[{
   RowBox[{"OperatorNames", "[", "2", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621890937705929*^9, 3.62189095341893*^9}}],

Cell[BoxData["\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"], \
"Output",
 CellChangeTimes->{{3.6218909541028852`*^9, 3.621890975019319*^9}, 
   3.621891088114197*^9, 3.6219627103602047`*^9, {3.621963080419323*^9, 
   3.621963090745426*^9}, {3.6219653084433403`*^9, 3.621965358568424*^9}, 
   3.62196544093082*^9, 3.621965931447062*^9, 3.621966687383065*^9, 
   3.624735636495185*^9, 3.624735742360371*^9}],

Cell[BoxData["\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)\"\>"], \
"Output",
 CellChangeTimes->{{3.6218909541028852`*^9, 3.621890975019319*^9}, 
   3.621891088114197*^9, 3.6219627103602047`*^9, {3.621963080419323*^9, 
   3.621963090745426*^9}, {3.6219653084433403`*^9, 3.621965358568424*^9}, 
   3.62196544093082*^9, 3.621965931447062*^9, 3.621966687383065*^9, 
   3.624735636495185*^9, 3.624735742365275*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Delta]", "Subsubsection",
 CellChangeTimes->{{3.62188839002754*^9, 3.6218883992468147`*^9}}],

Cell["\<\
\[Delta][n,level] returns the 0 operator if n\[NotEqual]0 and the identity \
operator if n=0 acting on states in the Verma
module at level.\
\>", "Text",
 CellChangeTimes->{{3.621888408071973*^9, 3.621888430028625*^9}, {
  3.623094387558509*^9, 3.623094387642848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"0", ",", "2"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"1", ",", "2"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.621888448982561*^9, 3.621888462053173*^9}, {
  3.621888496444368*^9, 3.6218884980269337`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.62188845804893*^9, 3.6218884623197947`*^9}, 
   3.6219627104076643`*^9, {3.621963080472187*^9, 3.621963090810554*^9}, {
   3.6219653085618057`*^9, 3.621965358840252*^9}, 3.621965440979189*^9, 
   3.6219659315096407`*^9, 3.621966687454342*^9, 3.624735636674747*^9, 
   3.624735742414253*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.62188845804893*^9, 3.6218884623197947`*^9}, 
   3.6219627104076643`*^9, {3.621963080472187*^9, 3.621963090810554*^9}, {
   3.6219653085618057`*^9, 3.621965358840252*^9}, 3.621965440979189*^9, 
   3.6219659315096407`*^9, 3.621966687454342*^9, 3.624735636674747*^9, 
   3.624735742420779*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operator", "Subsubsection",
 CellChangeTimes->{3.621887495775823*^9}],

Cell[TextData[{
 "Operator[X,n,level] returns the matrix describing the linear transformation \
between levels level and (level-n) that is the action of the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "n"], "."}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.621887507414403*^9, 3.6218875751303377`*^9}, {
  3.623094410114584*^9, 3.6230944120630703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Operator", "[", 
   RowBox[{"G", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", "2"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6218875770134077`*^9, 3.621887596318228*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], "0", "0"},
     {"1", "2", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.621887589123754*^9, 3.621887596664934*^9}, 
   3.621962710733588*^9, {3.621963080918899*^9, 3.621963090915535*^9}, {
   3.621965308632321*^9, 3.6219653596729507`*^9}, 3.621965441041771*^9, 
   3.621965931574938*^9, 3.621966687535836*^9, 3.624735636724414*^9, 
   3.624735742562004*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NOperator", "Subsubsection",
 CellChangeTimes->{3.621887611247991*^9}],

Cell[TextData[{
 "NOperator[X,Y,op_level,level] return a matrix representing the action of \
the normal-ordered product,",
 Cell[BoxData[
  FormBox[
   RowBox[{":", "XY", 
    SubscriptBox[":", "op_level"]}], TraditionalForm]]],
 " acting on the states in the Verma module at level level.\n\
NOperator[X,x,Y,y,op_level,level] returns the normal ordered product ",
 Cell[BoxData[
  FormBox[
   RowBox[{":", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[PartialD]", "x"], "X"}], 
     RowBox[{
      SuperscriptBox["\[PartialD]", "y"], "Y"}]}], 
    SubscriptBox[":", "op_level"]}], TraditionalForm]]],
 " instead."
}], "Text",
 CellChangeTimes->{{3.621887613753031*^9, 3.621887704314432*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["EvaluatedOperators", "Subsubsection",
 CellChangeTimes->{{3.621887720032209*^9, 3.62188773008733*^9}}],

Cell[TextData[{
 "EvaluatedOperators is a list of all the operators that have previously been \
evaluated.  The list is given as triplets ",
 StyleBox["{X, n, level}",
  FontWeight->"Bold"],
 " for the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "n"], " ", "acting", " ", "on", " ", 
    RowBox[{"level", "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.621887735943734*^9, 3.621887810306387*^9}}],

Cell[CellGroupData[{

Cell[BoxData["EvaluatedOperators"], "Input",
 CellChangeTimes->{{3.621887752897936*^9, 3.62188775695221*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["5", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", 
     RowBox[{"-", "2"}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["3", "2"]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", 
     RowBox[{"-", "1"}], ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{"-", 
      FractionBox["3", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", 
     RowBox[{"-", "1"}], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621887757381666*^9, 3.621962710804536*^9, {3.621963081085887*^9, 
   3.621963090961008*^9}, {3.62196530864997*^9, 3.621965359788683*^9}, 
   3.6219654410762987`*^9, 3.621965931625469*^9, 3.621966687567358*^9, 
   3.624735636773034*^9, 3.6247357426160107`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OperatorChain", "Subsubsection",
 CellChangeTimes->{{3.621888203265812*^9, 3.621888205207913*^9}}],

Cell["\<\
OperatorChain[operator_list,level] returns the matrix corresponding to the \
the product of
the operators given in operator_list.  The format of operator_list is as the \
output of OperatorNames.\
\>", "Text",
 CellChangeTimes->{{3.621888207767364*^9, 3.621888213080089*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"OperatorChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "0"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.621888216450754*^9, 3.621888233058989*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {"1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.621888229563401*^9, 3.621888233315414*^9}, 
   3.62196271083777*^9, {3.6219630811215487`*^9, 3.621963091012321*^9}, {
   3.621965308694975*^9, 3.621965359822863*^9}, 3.621965441125424*^9, 
   3.6219659316751547`*^9, 3.62196668758895*^9, 3.6247356368246098`*^9, 
   3.624735742666154*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HCOperatorChain", "Subsubsection",
 CellChangeTimes->{{3.6218882566852283`*^9, 3.6218882602993603`*^9}}],

Cell["\<\
HCOperatorChain[operator_list,level] gives the Hermitian conjugate of the \
product of
operators in operator_list, acting on the right on the subspace of the Verma \
module at level.\
\>", "Text",
 CellChangeTimes->{{3.621888270726885*^9, 3.621888290092347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HCOperatorChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "0"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.621888296776855*^9, 3.6218883154683437`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.621888309851449*^9, 3.6218883157428493`*^9}, 
   3.621962710888811*^9, {3.621963081169489*^9, 3.621963091061923*^9}, {
   3.621965308727893*^9, 3.6219653598722057`*^9}, 3.621965441175322*^9, 
   3.621965931725865*^9, 3.621966687616789*^9, 3.624735636869795*^9, 
   3.624735742715558*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions on Vector Spaces", "Section",
 CellChangeTimes->{{3.6218893321493187`*^9, 3.621889336899169*^9}}],

Cell["\<\
Included is a list of utility functions that describe operations on vector \
spaces that may be useful for using Weaver.  Vector spaces are always given \
as a list of basis elements.\
\>", "Text",
 CellChangeTimes->{{3.6218893434197073`*^9, 3.6218894050697308`*^9}, 
   3.626474770926734*^9}],

Cell[CellGroupData[{

Cell["MinimalRowReducedForm", "Subsubsection",
 CellChangeTimes->{{3.621889410734241*^9, 3.6218894157103653`*^9}}],

Cell["\<\
MinimalRowReducedForm[matrix] returns the row reduced form of matrix with the \
zero rows removed.\
\>", "Text",
 CellChangeTimes->{3.621889425482476*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinimalRowReducedForm", "[", "basis", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.621889437920093*^9, 3.62188951195472*^9}, {
  3.621889656005327*^9, 3.621889658420982*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "0", "0"},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6218895065746117`*^9, 3.621889512308777*^9}, 
   3.6219627111824703`*^9, {3.621963081221735*^9, 3.6219630911123877`*^9}, {
   3.621965308763358*^9, 3.621965360068783*^9}, 3.621965441208592*^9, 
   3.621965931775358*^9, 3.6219666876381817`*^9, 3.624735636920395*^9, 
   3.624735742783285*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EMatrixRank", "Subsubsection",
 CellChangeTimes->{3.6218895809675493`*^9}],

Cell["\<\
EMatrixRank[matrix] returns MatrixRank[matrix] if matrix has at least one row \
and returns 0 if the matrix has no rows.\
\>", "Text",
 CellChangeTimes->{{3.621889594502083*^9, 3.6218896097779083`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["InVectorSpaceQ", "Subsubsection",
 CellChangeTimes->{3.621889640725506*^9}],

Cell["\<\
InVectorSpaceQ[basis,vector] returns True is vector is in the span of basis \
and False otherwise.\
\>", "Text",
 CellChangeTimes->{3.62188964895088*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InVectorSpaceQ", "[", 
  RowBox[{"basis", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"InVectorSpaceQ", "[", 
  RowBox[{"basis", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.621889653334311*^9, 3.621889682706533*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.621889683118762*^9, 3.6219627112241583`*^9, {3.621963081270523*^9, 
   3.6219630911615143`*^9}, {3.621965308812904*^9, 3.6219653600974407`*^9}, 
   3.621965441257557*^9, 3.6219659318263617`*^9, 3.621966687683938*^9, 
   3.624735636970645*^9, 3.624735742831168*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.621889683118762*^9, 3.6219627112241583`*^9, {3.621963081270523*^9, 
   3.6219630911615143`*^9}, {3.621965308812904*^9, 3.6219653600974407`*^9}, 
   3.621965441257557*^9, 3.6219659318263617`*^9, 3.621966687683938*^9, 
   3.624735636970645*^9, 3.62473574283549*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IntersectVectorSpaces", "Subsubsection",
 CellChangeTimes->{{3.621889694302165*^9, 3.621889699142144*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"IntersectVectorSpaces", "[", 
     RowBox[{
      SubscriptBox["X", "1"], ",", "...", ",", 
      SubscriptBox["X", "n"]}], "]"}], " ", "returns", " ", "the", " "}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "intersection of multiple vector spaces."
}], "Text",
 CellChangeTimes->{{3.62188971717927*^9, 3.621889767655472*^9}, {
  3.621889897348097*^9, 3.621889897348154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"IntersectVectorSpaces", "[", 
  RowBox[{"basis1", ",", "basis2", ",", "basis3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621889768946413*^9, 3.6218898503485813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.621889851534481*^9, 3.621962711280286*^9, {3.621963081318643*^9, 
   3.621963091212328*^9}, {3.621965308862256*^9, 3.621965360139229*^9}, 
   3.621965441309144*^9, 3.621965931891981*^9, 3.621966687733391*^9, 
   3.624735637020255*^9, 3.624735742932704*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["UnionVectorSpaces", "Subsubsection",
 CellChangeTimes->{3.621889869401733*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"UnionVectorSpaces", "[", 
    RowBox[{
     SubscriptBox["X", "1"], ",", "...", ",", 
     SubscriptBox["X", "n"]}], "]"}], " ", "returns", " ", "the", " ", 
   "union", " ", "of", " ", "multiple", " ", "vector", " ", 
   RowBox[{"spaces", "."}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.621889877491714*^9, 3.621889950677044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnionVectorSpaces", "[", 
  RowBox[{"basis1", ",", "basis2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.621889965038972*^9, 3.621889988968341*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621889989249276*^9, 3.6219627113029222`*^9, {3.6219630813708553`*^9, 
   3.6219630912450523`*^9}, {3.621965308894792*^9, 3.621965360189898*^9}, 
   3.6219654413418407`*^9, 3.621965931942683*^9, 3.6219666877676497`*^9, 
   3.624735637075279*^9, 3.624735742982923*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions Describing Module Structure", "Section",
 CellChangeTimes->{{3.621888594921063*^9, 3.6218886091277933`*^9}}],

Cell["\<\
Included here is a list of commands provided by the package that assist in \
analysing the structure of a module.  Examples of thier use are provided on \
the super Virasoro representation defined above.\
\>", "Text",
 CellChangeTimes->{{3.6218886758223553`*^9, 3.621888698807309*^9}}],

Cell[CellGroupData[{

Cell["GramMatrix", "Subsubsection",
 CellChangeTimes->{{3.62188870387262*^9, 3.621888705135396*^9}, 
   3.621888759218853*^9}],

Cell["\<\
Gram Matrix[level] returns the Gram Matrix (the inner product for a unitary \
representation) at level level.  GramMatrix assumes that the highest weight \
subspace is already decomposed into an orthonormal basis.\
\>", "Text",
 CellChangeTimes->{{3.6218886633292103`*^9, 3.6218886670014973`*^9}, {
  3.621888763575729*^9, 3.621888801795999*^9}, {3.623094562727132*^9, 
  3.623094563454846*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"GramMatrix", "[", "i", "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "2", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621888808480076*^9, 3.621888844940583*^9}, {
  3.6218890118561277`*^9, 3.621889032137075*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "6"}], "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.621888825446892*^9, 3.621888845310349*^9}, {
   3.621889024195582*^9, 3.621889035540967*^9}, 3.621962711679899*^9, {
   3.6219630814201803`*^9, 3.621963091298415*^9}, {3.621965308945147*^9, 
   3.621965360271796*^9}, 3.621965441392345*^9, 3.621965932026843*^9, 
   3.621966687800626*^9, 3.624735637124737*^9, 3.624735743033518*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["KacDeterminant", "Subsubsection",
 CellChangeTimes->{3.621888857205454*^9}],

Cell["\<\
KacDeterminant[level] returns the Kac determinant at level obtained by taking \
the determinant of the Gram matrix.\
\>", "Text",
 CellChangeTimes->{{3.62188898417523*^9, 3.6218889978912907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"KacDeterminant", "[", "i", "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "2", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62188904392162*^9, 3.6218890474681597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox["1",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox["0",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox["0",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox["0",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox["0",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621889048025313*^9, 3.621962711773452*^9, {3.6219630814707117`*^9, 
   3.6219630913465643`*^9}, {3.62196530897855*^9, 3.621965360321905*^9}, 
   3.621965441417153*^9, 3.6219659320748587`*^9, 3.6219666878194237`*^9, 
   3.6247356373473797`*^9, 3.624735743081875*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GramRank", "Subsubsection",
 CellChangeTimes->{{3.6218890582453527`*^9, 3.6218890596684*^9}}],

Cell["\<\
GramRank[level] returns the rank of the Gram matrix at level.  This is \
exactly the number of non-null vectors at that level.  The character of the \
minimal model at the vacuum is\
\>", "Text",
 CellChangeTimes->{{3.6218890698428087`*^9, 3.621889086580996*^9}, {
  3.621889140285344*^9, 3.621889171117573*^9}, {3.621889210024919*^9, 
  3.62188921052699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "^", 
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}]}], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "^", "i"}], " ", 
       RowBox[{"GramRank", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "6", ",", 
        RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"O", "[", "q", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"13", "/", "2"}], ")"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.62188917330947*^9, 3.621889247488881*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "q"], "+", 
   SqrtBox["q"], "+", "q", "+", 
   SuperscriptBox["q", 
    RowBox[{"3", "/", "2"}]], "+", 
   SuperscriptBox["q", "2"], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["q", 
     RowBox[{"5", "/", "2"}]]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["q", "3"]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["q", 
     RowBox[{"7", "/", "2"}]]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["q", "4"]}], "+", 
   RowBox[{"5", " ", 
    SuperscriptBox["q", 
     RowBox[{"9", "/", "2"}]]}], "+", 
   RowBox[{"7", " ", 
    SuperscriptBox["q", "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "q", "]"}], 
     RowBox[{"11", "/", "2"}]],
    SeriesData[$CellContext`q, 0, {}, -2, 11, 2],
    Editable->False]}],
  SeriesData[$CellContext`q, 0, {1, 0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 5, 7}, -2, 
   11, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6218892203406563`*^9, 3.621889247835766*^9}, 
   3.621962715217991*^9, {3.6219630828689203`*^9, 3.6219630946862707`*^9}, {
   3.621965310879868*^9, 3.6219653658147507`*^9}, 3.621965449347887*^9, 
   3.621965940050189*^9, 3.621966695894973*^9, 3.624735637766055*^9, 
   3.624735753152269*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GramNullspace", "Subsubsection",
 CellChangeTimes->{{3.6218900102944202`*^9, 3.621890012596088*^9}}],

Cell["\<\
GramNullspace[level] returns a basis for the null vectors at level.  These \
are exactly the basis for the nullspace of the Gram matrix.\
\>", "Text",
 CellChangeTimes->{{3.621890022248892*^9, 3.621890034220313*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GramNullspace", "[", "2", "]"}], ".", 
  RowBox[{"DisplayName", "/@", 
   RowBox[{"StateNames", "[", "2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.62189003770464*^9, 3.6218900404668093`*^9}, {
  3.6218901505755568`*^9, 3.621890170965035*^9}, {3.621890221503244*^9, 
  3.6218902230688963`*^9}, {3.621891099236762*^9, 3.6218911059709167`*^9}, {
  3.6218912240088453`*^9, 3.6218912591404667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)|1>\"\>", 
   ",", "\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.621890151521976*^9, 3.621890171766842*^9}, 
   3.62189110631426*^9, 3.62189123608978*^9, 3.621962715346531*^9, 
   3.621963094921542*^9, {3.621965311434204*^9, 3.621965365999234*^9}, 
   3.621965449554247*^9, 3.6219659401041*^9, 3.621966696040843*^9, 
   3.624735637808322*^9, 3.624735753285904*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Descendents", "Subsubsection",
 CellChangeTimes->{{3.621891361964697*^9, 3.621891363546053*^9}}],

Cell["\<\
Descendents[source, source_level, target_level] finds a basis for the \
descendents of a singular vector, source, at level target_level, that is the \
subspace spanned by the action of the universal covering space of the \
negative level operators on source. Descendents are found via the operators \
in MinimalGeneratorsCreation.\
\>", "Text",
 CellChangeTimes->{{3.6218913665280123`*^9, 3.621891368983034*^9}, {
  3.621961734906055*^9, 3.621961789706217*^9}, {3.623094530734806*^9, 
  3.623094534958536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vector", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";", 
  RowBox[{"vector", ".", 
   RowBox[{"DisplayName", "/@", 
    RowBox[{"StateNames", "[", "2", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendents", "=", 
   RowBox[{"Descendents", "[", 
    RowBox[{"vector", ",", "2", ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "descendents"}], ")"}], ".", 
  RowBox[{"DisplayName", "/@", 
   RowBox[{"StateNames", "[", "4", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6218913808003387`*^9, 3.621891504051382*^9}}],

Cell[BoxData["\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"], \
"Output",
 CellChangeTimes->{{3.621891417244048*^9, 3.621891504466689*^9}, 
   3.6219627153972197`*^9, 3.621963095002019*^9, {3.621965311495666*^9, 
   3.621965366053012*^9}, 3.6219654496150618`*^9, 3.621965940149352*^9, 
   3.6219666960929213`*^9, 3.624735637858396*^9, 3.6247357533208838`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\
\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>", "+", 
    RowBox[{
    "2", " ", \
"\<\"\\!\\(G\\_\\(-5/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\
\>"}], "+", 
    RowBox[{
    "2", " ", "\<\"\\!\\(G\\_\\(-7/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}]}],
    ",", 
   RowBox[{
    RowBox[{
    "-", "\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\\
)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}], "-", 
    RowBox[{
    "2", " ", \
"\<\"\\!\\(G\\_\\(-5/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\
\>"}], "+", 
    RowBox[{
    "2", " ", "\<\"\\!\\(L\\_\\(-3\\)\\)\\!\\(L\\_\\(-1\\)\\)|1>\"\>"}]}], 
   ",", 
   RowBox[{
   "2", " ", \
"\<\"\\!\\(L\\_\\(-2\\)\\)\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\
\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.621891417244048*^9, 3.621891504466689*^9}, 
   3.6219627153972197`*^9, 3.621963095002019*^9, {3.621965311495666*^9, 
   3.621965366053012*^9}, 3.6219654496150618`*^9, 3.621965940149352*^9, 
   3.6219666960929213`*^9, 3.624735637858396*^9, 3.624735753327545*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DescendentsOfSpace", "Subsubsection",
 CellChangeTimes->{{3.621891519354891*^9, 3.621891523042342*^9}}],

Cell["\<\
Descendents[source_basis, source_level, target_level] finds a basis for the \
descendents of a singular subspace,
source_basis, at level target_level via the operators in \
MinimalGeneratorsCreation.\
\>", "Text",
 CellChangeTimes->{{3.6218915251102743`*^9, 3.621891529553615*^9}, {
  3.621891796422393*^9, 3.621891822549919*^9}, {3.623094549774745*^9, 
  3.6230945739350224`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vectors", "=", 
   RowBox[{"GramNullspace", "[", "2", "]"}]}], ";", 
  RowBox[{"vectors", ".", 
   RowBox[{"DisplayName", "/@", 
    RowBox[{"StateNames", "[", "2", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendents", "=", 
   RowBox[{"DescendentsOfSpace", "[", 
    RowBox[{"vectors", ",", "2", ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "descendents"}], ")"}], ".", 
  RowBox[{"DisplayName", "/@", 
   RowBox[{"StateNames", "[", "4", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.621891534885763*^9, 3.6218915395482616`*^9}, {
  3.621891603490849*^9, 3.621891636630847*^9}, {3.621891785001789*^9, 
  3.6218917904377604`*^9}, {3.6218918251701927`*^9, 3.6218918289770803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)|1>\"\>", 
   ",", "\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.621891606440628*^9, 3.621891636897154*^9}, 
   3.6218917907936087`*^9, {3.621891827684318*^9, 3.621891829444022*^9}, 
   3.621894367857461*^9, 3.621894400427609*^9, 3.621962716925449*^9, 
   3.621963095699255*^9, {3.621965311553369*^9, 3.621965366277135*^9}, 
   3.6219654496439342`*^9, 3.62196594019867*^9, 3.621966696140729*^9, 
   3.624735637909251*^9, 3.624735753374151*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
    "2", " ", \
"\<\"\\!\\(G\\_\\(-5/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\
\>"}], "+", 
    RowBox[{
    "2", " ", "\<\"\\!\\(G\\_\\(-7/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}]}],
    ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], 
     " ", "\<\"\\!\\(G\\_\\(-5/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(G\\_\\(-1/2\\\
)\\)|1>\"\>"}], "+", 
    RowBox[{
    "2", " ", "\<\"\\!\\(L\\_\\(-3\\)\\)\\!\\(L\\_\\(-1\\)\\)|1>\"\>"}]}], 
   ",", 
   RowBox[{
   "2", " ", \
"\<\"\\!\\(L\\_\\(-2\\)\\)\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\
\>"}], ",", 
   RowBox[{
   "2", " ", \
"\<\"\\!\\(L\\_\\(-2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)|1>\"\>"}]\
, ",", 
   RowBox[{
   "2", " ", "\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\
\\)\\)\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>"}], ",", 
   RowBox[{
   "2", " ", \
"\<\"\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\
\\(-1\\)\\)|1>\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.621891606440628*^9, 3.621891636897154*^9}, 
   3.6218917907936087`*^9, {3.621891827684318*^9, 3.621891829444022*^9}, 
   3.621894367857461*^9, 3.621894400427609*^9, 3.621962716925449*^9, 
   3.621963095699255*^9, {3.621965311553369*^9, 3.621965366277135*^9}, 
   3.6219654496439342`*^9, 3.62196594019867*^9, 3.621966696140729*^9, 
   3.624735637909251*^9, 3.6247357533798933`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DescendentQ", "Subsubsection",
 CellChangeTimes->{{3.621894341337697*^9, 3.621894343839266*^9}}],

Cell["\<\
DescendentQ[source,sourcelevel,target,targetlevel] returns True if target is \
a descendent of source.\
\>", "Text",
 CellChangeTimes->{3.6218943551632013`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DescendentQ", "[", 
  RowBox[{
   RowBox[{"vectors", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", 
   RowBox[{"descendents", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.6218943587220716`*^9, 3.621894392522132*^9}}],

Cell[BoxData[
 RowBox[{"DescendentQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}], ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{{3.621894392794635*^9, 3.621894403535038*^9}, 
   3.621962717459208*^9, 3.6219630963195972`*^9, {3.621965311604005*^9, 
   3.621965366429126*^9}, 3.621965449681666*^9, 3.621965940248474*^9, 
   3.621966696191597*^9, 3.624735637960022*^9, 3.6247357534415894`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindSingularSubspace", "Subsubsection",
 CellChangeTimes->{{3.6218918433144493`*^9, 3.6218918458732777`*^9}}],

Cell["\<\
FindSingularSubspace[basis,level] returns a basis for the set of singular \
vectors in the span of basis
at level level.  If basis is omitted, FindSingularSubspace acts over the \
nullspace at that level.\
\>", "Text",
 CellChangeTimes->{3.621891856371183*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSingularSubspace", "[", 
   RowBox[{"1", "/", "2"}], "]"}], ".", 
  RowBox[{"DisplayName", "/@", 
   RowBox[{"StateNames", "[", 
    RowBox[{"1", "/", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.621892508974039*^9, 3.62189251392065*^9}, {
   3.621893153106906*^9, 3.621893161730015*^9}, 3.621894369645749*^9}],

Cell[BoxData[
 RowBox[{"{", "\<\"\\!\\(G\\_\\(-1/2\\)\\)|1>\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.6218931562608223`*^9, 3.6218931619425*^9}, 
   3.621962717515649*^9, 3.621963096433358*^9, {3.621965311654838*^9, 
   3.62196536647838*^9}, 3.621965449715691*^9, 3.621965940299511*^9, 
   3.621966696245525*^9, 3.624735638004409*^9, 3.624735753491165*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindAnnihilatingOperators", "Subsubsection",
 CellChangeTimes->{{3.621961879426106*^9, 3.621961883560114*^9}}],

Cell["\<\
FindAnnihilatingOperators[operator_level,state,state_level] finds a basis for \
the space of operators
at level operator_level that annihilate state.  If operator_level is negative \
(resp. positive), FindAnnihilatingOperators will only consider operators in \
OperatorList[level] (resp. PositiveOperatorList[level]).\
\>", "Text",
 CellChangeTimes->{
  3.6219618917487373`*^9, {3.6219619224599533`*^9, 3.621961930672846*^9}, {
   3.621965577909478*^9, 3.621965652468775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DisplayName", "[", 
  RowBox[{
   RowBox[{"StateNames", "[", "2", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindAnnihilatingOperators", "[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}], ".", 
  RowBox[{"DisplayName", "/@", 
   RowBox[{"OperatorNames", "[", "2", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.621961906096609*^9, 3.621961950185494*^9}, {
  3.621966083177343*^9, 3.621966165740712*^9}}],

Cell[BoxData["\<\"\\!\\(L\\_\\(-2\\)\\)|1>\"\>"], "Output",
 CellChangeTimes->{{3.621965940366914*^9, 3.6219659656048117`*^9}, {
   3.621966061781704*^9, 3.6219661661911573`*^9}, 3.621966696296167*^9, 
   3.624735638069932*^9, 3.6247357535361547`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(L\\_\\(-1\\)\\)\\!\\(L\\_\\(-1\\)\\)\"\>", ",", 
   RowBox[{"\<\"\\!\\(G\\_\\(-3/2\\)\\)\\!\\(G\\_\\(-1/2\\)\\)\"\>", "+", 
    RowBox[{"2", " ", "\<\"\\!\\(L\\_\\(-2\\)\\)\"\>"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.621965940366914*^9, 3.6219659656048117`*^9}, {
   3.621966061781704*^9, 3.6219661661911573`*^9}, 3.621966696296167*^9, 
   3.624735638069932*^9, 3.624735753540655*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindEigenbasis", "Subsubsection",
 CellChangeTimes->{3.621966229017459*^9}],

Cell[TextData[{
 "FindEigenbasis[Xs, basis, level] returns a list of simultanious \
eigenvectors and eigenvalues of the operator ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", 
    RowBox[{"0", " "}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "for X in Xs acting on the subspace of the Verma module at level level \
generated by basis.  If basis is omitted, FindEigenbasis uses the entire \
space at level level.  FindEigenvalue may return unexpected results if basis \
is not the union of eigenspaces of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " or if the operators in Xs do not commute.\n\nThe format returned is a list \
{{eigenvalues for Xs},{basis of eigenspace}} for each set of simultanious \
eigenvalues."
}], "Text",
 CellChangeTimes->{{3.6219662409797897`*^9, 3.621966263221489*^9}, {
  3.621966328251726*^9, 3.6219664493100452`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEigenbasis", "[", 
  RowBox[{
   RowBox[{"{", "L", "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.621966266149591*^9, 3.621966314659531*^9}, {
  3.621966369421648*^9, 3.621966370283111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6219662708650618`*^9, 3.621966314985537*^9}, 
   3.6219663707289143`*^9, 3.621966696347764*^9, 3.6247356381259537`*^9, 
   3.624735753590658*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ConstructLadderDiagram", "Subsubsection",
 CellChangeTimes->{3.621966466067483*^9}],

Cell["\<\
ConstructLadderDiagram[cartan,max_level]={singulars,parentage} returns a list \
of singular vectors
(including the highest weight vector) up to level max_level labeled under \
eigenvalues of the operators listed in cartan.  parentage is the adjacency \
matrix of the corresponding embedding diagram: parentage[[i,j]]=1 if j is a \
descendent of i.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6219664765739603`*^9, 3.621966487236939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"singulars", ",", "parentage"}], "}"}], "=", 
  RowBox[{"ConstructLadderDiagram", "[", 
   RowBox[{
    RowBox[{"{", "L", "}"}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6219664916976433`*^9, 3.621966515358839*^9}, {
  3.624735778697966*^9, 3.6247358022071247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Singular vectors have dimension \"\>", "\[InvisibleSpace]", 
   "1", "\[InvisibleSpace]", "\<\". \"\>"}],
  SequenceForm["Singular vectors have dimension ", 1, ". "],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.6247358026014338`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Found singular vector at level \"\>", "\[InvisibleSpace]", "0",
    "\[InvisibleSpace]", "\<\", with eigenvalues \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "0", "}"}], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Found singular vector at level ", 0, ", with eigenvalues ", {0}, "."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.6247358026080914`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["1", "2"]}],
  SequenceForm["Searching for singular vectors at level ", 
   Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802613915*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Singular vectors have dimension \"\>", "\[InvisibleSpace]", 
   "1", "\[InvisibleSpace]", "\<\". \"\>"}],
  SequenceForm["Singular vectors have dimension ", 1, ". "],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802619659*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Found singular vector at level \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "2"], "\[InvisibleSpace]", "\<\", with eigenvalues \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Found singular vector at level ", 
   Rational[1, 2], ", with eigenvalues ", {
    Rational[1, 2]}, "."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802625636*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", "1"}],
  SequenceForm["Searching for singular vectors at level ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.62473580263146*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["3", "2"]}],
  SequenceForm["Searching for singular vectors at level ", 
   Rational[3, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802637312*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", "2"}],
  SequenceForm["Searching for singular vectors at level ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802643113*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["5", "2"]}],
  SequenceForm["Searching for singular vectors at level ", 
   Rational[5, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802648943*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Searching for singular vectors at level \"\>", 
   "\[InvisibleSpace]", "3"}],
  SequenceForm["Searching for singular vectors at level ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.624735802654789*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Checking parentage of \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "0", "}"}], "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}]}],
  SequenceForm["Checking parentage of ", {0}, " to ", {
    Rational[1, 2]}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.624735753640256*^9, 3.6247358026607943`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{"{", 
        FractionBox["1", "2"], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621966515786983*^9, 3.6219666964377623`*^9, 3.6247356386811132`*^9, {
   3.62473575369482*^9, 3.6247358026670437`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LadderGraph", "Subsubsection",
 CellChangeTimes->{{3.621966541095912*^9, 3.6219665430780287`*^9}}],

Cell["\<\
LadderGraph[singulars,parentage] displays the embedding diagram calculated by \
ConstructLadderDiagram.\
\>", "Text",
 CellChangeTimes->{{3.621966535561253*^9, 3.621966554990028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LadderGraph", "@@", 
  RowBox[{"{", 
   RowBox[{"singulars", ",", "parentage"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6219665561019583`*^9, 3.621966562723234*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2}, {{{1, 2}}, Null}, {EdgeShapeFunction -> {
         GraphElementData["FilledArrow", "ArrowSize" -> 0.05]}, 
       VertexLabels -> {
        2 -> Placed["{1/2}", Top], 1 -> Placed["{0}", Top]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[{{0.05, 0.8, {
             GraphicsBox[
              
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
               0}}}, {{{-1., -0.31249915682968066`}, {-0.8749949409780775, \
-8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
               0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
         ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["\<\"{0}\"\>", Offset[{0, -2}, {1., 0.01273}], ImageScaled[{0.5, 1}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532`*^-16}, 0.01273], 
         InsetBox["\<\"{1/2}\"\>", 
          Offset[{0, -2}, {0., 0.012730000000000123`}], ImageScaled[{0.5, 1}],
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->15]], "Output",
 CellChangeTimes->{3.621966563748458*^9, 3.6219666966944017`*^9, 
  3.624735638996558*^9, 3.624735753948172*^9, 3.624735805835864*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1112, 987},
WindowMargins->{{404, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 242, 3, 92, "Title"],
Cell[825, 27, 1875, 32, 338, "Text"],
Cell[CellGroupData[{
Cell[2725, 63, 104, 1, 64, "Section"],
Cell[2832, 66, 744, 17, 106, "Text"],
Cell[CellGroupData[{
Cell[3601, 87, 146, 3, 28, "Input"],
Cell[3750, 92, 256, 5, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4055, 103, 177, 2, 64, "Section"],
Cell[4235, 107, 1728, 44, 182, "Text"],
Cell[CellGroupData[{
Cell[5988, 155, 103, 1, 35, "Subsubsection"],
Cell[6094, 158, 328, 6, 30, "Text"],
Cell[6425, 166, 298, 7, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6760, 178, 115, 1, 35, "Subsubsection"],
Cell[6878, 181, 352, 9, 49, "Text"],
Cell[7233, 192, 156, 3, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7426, 200, 108, 1, 35, "Subsubsection"],
Cell[7537, 203, 292, 9, 30, "Text"],
Cell[7832, 214, 325, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8194, 227, 99, 1, 35, "Subsubsection"],
Cell[8296, 230, 382, 15, 30, "Text"],
Cell[8681, 247, 335, 9, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9053, 261, 95, 1, 35, "Subsubsection"],
Cell[9151, 264, 654, 17, 51, "Text"],
Cell[9808, 283, 589, 17, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10434, 305, 100, 1, 35, "Subsubsection"],
Cell[10537, 308, 298, 7, 30, "Text"],
Cell[10838, 317, 300, 9, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11175, 331, 102, 1, 35, "Subsubsection"],
Cell[11280, 334, 405, 8, 49, "Text"],
Cell[11688, 344, 162, 4, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11887, 353, 103, 1, 35, "Subsubsection"],
Cell[11993, 356, 583, 16, 68, "Text"],
Cell[12579, 374, 495, 13, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13111, 392, 103, 1, 35, "Subsubsection"],
Cell[13217, 395, 1580, 52, 72, "Text"],
Cell[14800, 449, 1925, 62, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16762, 516, 189, 2, 35, "Subsubsection"],
Cell[16954, 520, 675, 19, 70, "Text"],
Cell[17632, 541, 977, 31, 46, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18658, 578, 310, 4, 64, "Section"],
Cell[18971, 584, 465, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[19461, 595, 72, 1, 35, "Subsubsection"],
Cell[19536, 598, 158, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[19719, 605, 233, 5, 46, "Input"],
Cell[19955, 612, 343, 5, 28, "Output"],
Cell[20301, 619, 363, 6, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20713, 631, 80, 1, 35, "Subsubsection"],
Cell[20796, 634, 353, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[21174, 644, 132, 2, 28, "Input"],
Cell[21309, 648, 927, 29, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22285, 683, 88, 1, 35, "Subsubsection"],
Cell[22376, 686, 406, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[22807, 697, 142, 2, 28, "Input"],
Cell[22952, 701, 779, 24, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23780, 731, 101, 1, 35, "Subsubsection"],
Cell[23884, 734, 271, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[24180, 743, 129, 2, 28, "Input"],
Cell[24312, 747, 1115, 36, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25476, 789, 95, 1, 35, "Subsubsection"],
Cell[25574, 792, 223, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[25822, 800, 123, 2, 28, "Input"],
Cell[25948, 804, 312, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26309, 815, 102, 1, 35, "Subsubsection"],
Cell[26414, 818, 182, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[26621, 827, 280, 9, 28, "Input"],
Cell[26904, 838, 370, 7, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27323, 851, 102, 1, 35, "Subsubsection"],
Cell[27428, 854, 202, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[27655, 862, 379, 9, 46, "Input"],
Cell[28037, 873, 419, 6, 28, "Output"],
Cell[28459, 881, 416, 6, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28924, 893, 100, 1, 35, "Subsubsection"],
Cell[29027, 896, 278, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[29330, 906, 359, 9, 46, "Input"],
Cell[29692, 917, 930, 23, 63, "Output"],
Cell[30625, 942, 886, 21, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31560, 969, 75, 1, 35, "Subsubsection"],
Cell[31638, 972, 391, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[32054, 985, 245, 7, 28, "Input"],
Cell[32302, 994, 994, 26, 89, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33345, 1026, 76, 1, 35, "Subsubsection"],
Cell[33424, 1029, 697, 20, 76, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34158, 1054, 108, 1, 35, "Subsubsection"],
Cell[34269, 1057, 471, 13, 32, "Text"],
Cell[CellGroupData[{
Cell[34765, 1074, 109, 1, 28, "Input"],
Cell[34877, 1077, 1598, 51, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36524, 1134, 104, 1, 35, "Subsubsection"],
Cell[36631, 1137, 285, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[36941, 1147, 401, 13, 28, "Input"],
Cell[37345, 1162, 897, 23, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38291, 1191, 110, 1, 35, "Subsubsection"],
Cell[38404, 1194, 272, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[38701, 1204, 405, 13, 28, "Input"],
Cell[39109, 1219, 883, 21, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40053, 1247, 113, 1, 64, "Section"],
Cell[40169, 1250, 303, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[40497, 1260, 114, 1, 35, "Subsubsection"],
Cell[40614, 1263, 164, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[40803, 1271, 699, 18, 114, "Input"],
Cell[41505, 1291, 919, 22, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42473, 1319, 80, 1, 35, "Subsubsection"],
Cell[42556, 1322, 212, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42805, 1331, 81, 1, 35, "Subsubsection"],
Cell[42889, 1334, 163, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[43077, 1342, 867, 23, 131, "Input"],
Cell[43947, 1367, 320, 5, 28, "Output"],
Cell[44270, 1374, 320, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44639, 1385, 112, 1, 35, "Subsubsection"],
Cell[44754, 1388, 458, 13, 32, "Text"],
Cell[CellGroupData[{
Cell[45237, 1405, 1201, 34, 80, "Input"],
Cell[46441, 1441, 398, 8, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46888, 1455, 84, 1, 35, "Subsubsection"],
Cell[46975, 1458, 436, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[47436, 1472, 603, 18, 63, "Input"],
Cell[48042, 1492, 551, 13, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48654, 1512, 124, 1, 64, "Section"],
Cell[48781, 1515, 295, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[49101, 1524, 126, 2, 35, "Subsubsection"],
Cell[49230, 1528, 405, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[49660, 1539, 366, 9, 28, "Input"],
Cell[50029, 1550, 3398, 91, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53476, 1647, 81, 1, 35, "Subsubsection"],
Cell[53560, 1650, 206, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[53791, 1658, 320, 8, 28, "Input"],
Cell[54114, 1668, 733, 22, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54896, 1696, 99, 1, 35, "Subsubsection"],
Cell[54998, 1699, 370, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[55393, 1710, 590, 19, 28, "Input"],
Cell[55986, 1731, 1260, 36, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57295, 1773, 106, 1, 35, "Subsubsection"],
Cell[57404, 1776, 226, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[57655, 1784, 431, 8, 28, "Input"],
Cell[58089, 1794, 510, 9, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58648, 1809, 102, 1, 35, "Subsubsection"],
Cell[58753, 1812, 520, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[59298, 1825, 642, 18, 63, "Input"],
Cell[59943, 1845, 372, 5, 28, "Output"],
Cell[60318, 1852, 1167, 30, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61534, 1888, 109, 1, 35, "Subsubsection"],
Cell[61646, 1891, 391, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[62062, 1903, 784, 19, 63, "Input"],
Cell[62849, 1924, 589, 10, 28, "Output"],
Cell[63441, 1936, 1450, 39, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64940, 1981, 102, 1, 35, "Subsubsection"],
Cell[65045, 1984, 170, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[65240, 1992, 299, 7, 28, "Input"],
Cell[65542, 2001, 589, 12, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66180, 2019, 115, 1, 35, "Subsubsection"],
Cell[66298, 2022, 270, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[66593, 2032, 354, 8, 28, "Input"],
Cell[66950, 2042, 360, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67359, 2053, 116, 1, 35, "Subsubsection"],
Cell[67478, 2056, 486, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[67989, 2069, 543, 13, 46, "Input"],
Cell[68535, 2084, 251, 3, 28, "Output"],
Cell[68789, 2089, 444, 8, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69282, 2103, 81, 1, 35, "Subsubsection"],
Cell[69366, 2106, 930, 21, 110, "Text"],
Cell[CellGroupData[{
Cell[70321, 2131, 229, 5, 28, "Input"],
Cell[70553, 2138, 694, 22, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71296, 2166, 89, 1, 35, "Subsubsection"],
Cell[71388, 2169, 463, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[71876, 2181, 329, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[72230, 2193, 313, 6, 22, "Print"],
Cell[72546, 2201, 442, 8, 22, "Print"],
Cell[72991, 2211, 325, 8, 38, "Print"],
Cell[73319, 2221, 311, 6, 22, "Print"],
Cell[73633, 2229, 517, 11, 38, "Print"],
Cell[74153, 2242, 285, 6, 22, "Print"],
Cell[74441, 2250, 325, 8, 38, "Print"],
Cell[74769, 2260, 286, 6, 22, "Print"],
Cell[75058, 2268, 325, 8, 38, "Print"],
Cell[75386, 2278, 286, 6, 22, "Print"],
Cell[75675, 2286, 419, 10, 38, "Print"]
}, Open  ]],
Cell[76109, 2299, 770, 25, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76928, 2330, 104, 1, 35, "Subsubsection"],
Cell[77035, 2333, 193, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[77253, 2341, 191, 4, 28, "Input"],
Cell[77447, 2347, 1693, 36, 66, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
